# üîê INTEGRA√á√ÉO JWT - SEENTI APP
# Arquivo principal para integra√ß√£o JWT com sistema atual

from .config.jwt_config import get_jwt_config
from .middleware.jwt_middleware import init_jwt_middleware
from .routes.jwt_routes import register_jwt_routes

def init_jwt_system(app):
    """
    Inicializa o sistema JWT na aplica√ß√£o Flask
    
    Args:
        app: Inst√¢ncia da aplica√ß√£o Flask
        
    Returns:
        app: Aplica√ß√£o Flask com JWT configurado
    """
    
    print("üöÄ INICIANDO INTEGRA√á√ÉO JWT - SEENTI APP")
    print("=" * 50)
    
    try:
        # 1. Configurar JWT
        print("1Ô∏è‚É£ Configurando JWT...")
        jwt_config = get_jwt_config()
        app.config.update(jwt_config)
        print("   ‚úÖ Configura√ß√£o JWT aplicada")
        
        # 2. Inicializar Flask-JWT-Extended
        print("2Ô∏è‚É£ Inicializando Flask-JWT-Extended...")
        from flask_jwt_extended import JWTManager
        jwt = JWTManager(app)
        print("   ‚úÖ JWTManager inicializado")
        
        # 3. Inicializar middleware personalizado
        print("3Ô∏è‚É£ Inicializando middleware JWT...")
        init_jwt_middleware(app)
        print("   ‚úÖ Middleware JWT inicializado")
        
        # 4. Registrar rotas JWT
        print("4Ô∏è‚É£ Registrando rotas JWT...")
        register_jwt_routes(app)
        print("   ‚úÖ Rotas JWT registradas")
        
        print("=" * 50)
        print("üéâ SISTEMA JWT INTEGRADO COM SUCESSO!")
        print("=" * 50)
        
        return app
        
    except Exception as e:
        print(f"‚ùå ERRO NA INTEGRA√á√ÉO JWT: {str(e)}")
        print("üîß Verificar depend√™ncias e configura√ß√µes")
        raise e

# Fun√ß√µes de conveni√™ncia para importa√ß√£o
def get_jwt_config_dict():
    """Retorna configura√ß√£o JWT como dicion√°rio"""
    return get_jwt_config()

def get_jwt_middleware():
    """Retorna inst√¢ncia do middleware JWT"""
    from .middleware.jwt_middleware import jwt_middleware
    return jwt_middleware

def get_jwt_decorators():
    """Retorna decorators JWT para uso em rotas"""
    from .middleware.jwt_middleware import require_jwt, require_user_type, rate_limit_check
    return {
        'require_jwt': require_jwt,
        'require_user_type': require_user_type,
        'rate_limit_check': rate_limit_check
    }
