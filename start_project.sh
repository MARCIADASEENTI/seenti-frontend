#!/bin/bash
# start_project.sh - Otimizado para Sprint 08 - VERS√ÉO CORRIGIDA
# Script de inicializa√ß√£o do ambiente Seenti

echo "üöÄ Iniciando ambiente Seenti..."

# Verificar se estamos no diret√≥rio correto
if [ ! -d "./SeentiCliente" ]; then
    echo "‚ùå Diret√≥rio ./SeentiCliente n√£o encontrado!"
    echo "   Execute este script a partir de /home/marcia/seenti_app"
    exit 1
fi

# Verificar se o ambiente virtual existe
if [ ! -f "./SeentiCliente/e/bin/activate" ]; then
    echo "‚ùå Ambiente virtual n√£o encontrado!"
    echo "   Execute: python3 -m venv SeentiCliente/e"
    exit 1
fi

# Verificar se o diret√≥rio dev existe
if [ ! -d "./SeentiCliente/dev" ]; then
    echo "‚ùå Diret√≥rio ./SeentiCliente/dev n√£o encontrado!"
    exit 1
fi

# Verificar se o diret√≥rio Frontend existe
if [ ! -d "./SeentiCliente/Frontend" ]; then
    echo "‚ùå Diret√≥rio ./SeentiCliente/Frontend n√£o encontrado!"
    exit 1
fi

# Verificar se as portas est√£o livres
if lsof -i :5001 > /dev/null 2>&1; then
    echo "‚ùå Porta 5001 (Backend) j√° est√° em uso!"
    echo "   Processo: $(lsof -i :5001 | grep LISTEN)"
    exit 1
fi

if lsof -i :5173 > /dev/null 2>&1; then
    echo "‚ùå Porta 5173 (Frontend) j√° est√° em uso!"
    echo "   Processo: $(lsof -i :5173 | grep LISTEN)"
    exit 1
fi

# Verificar se j√° h√° processos rodando
if pgrep -f "python3 app.py" > /dev/null; then
    echo "‚ö†Ô∏è  Backend j√° est√° rodando!"
    BACKEND_PID=$(pgrep -f "python3 app.py" | head -1)
    echo "   PID: $BACKEND_PID"
else
    echo "üîß Iniciando backend..."
    cd ./SeentiCliente/dev || exit
    source ../e/bin/activate
    python3 app.py &
    BACKEND_PID=$!
    echo "‚úÖ Backend iniciado (PID: $BACKEND_PID)"
    cd ../..
fi

# Verificar se j√° h√° processos Vite rodando
if pgrep -f "vite" > /dev/null; then
    echo "‚ö†Ô∏è  Frontend j√° est√° rodando!"
    FRONTEND_PID=$(pgrep -f "vite" | head -1)
    echo "   PID: $FRONTEND_PID"
else
    echo "üé® Iniciando frontend..."
    cd ./SeentiCliente/Frontend || exit
    npm run dev &
    FRONTEND_PID=$!
    echo "‚úÖ Frontend iniciado (PID: $FRONTEND_PID)"
    cd ../..
fi

echo ""
echo "üéØ Status do Ambiente:"
echo "   Backend:  http://localhost:5001 (PID: $BACKEND_PID)"
echo "   Frontend: http://localhost:5173 (PID: $FRONTEND_PID)"
echo ""
echo "üí° Para parar: CTRL+C ou ./stop_project.sh"
echo "üåê Abrindo navegador..."

# Abrir navegador
xdg-open http://localhost:5173 >/dev/null 2>&1 &

# Fun√ß√£o de limpeza
cleanup() {
    echo ""
    echo "üõë Encerrando ambiente Seenti..."
    if [ ! -z "$BACKEND_PID" ]; then
        kill $BACKEND_PID 2>/dev/null
        echo "   Backend encerrado"
    fi
    if [ ! -z "$FRONTEND_PID" ]; then
        kill $FRONTEND_PID 2>/dev/null
        echo "   Frontend encerrado"
    fi
    echo "‚úÖ Ambiente encerrado com sucesso!"
    exit 0
}

# Capturar CTRL+C
trap cleanup SIGINT

# Aguardar
echo "‚è≥ Pressione CTRL+C para encerrar..."
wait
